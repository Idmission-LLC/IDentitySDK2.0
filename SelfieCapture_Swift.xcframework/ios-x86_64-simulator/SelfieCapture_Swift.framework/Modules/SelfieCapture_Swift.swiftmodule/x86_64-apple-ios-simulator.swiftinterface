// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.6.1 (swiftlang-5.6.0.323.66 clang-1316.0.20.12)
// swift-module-flags: -target x86_64-apple-ios13.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name SelfieCapture_Swift
import AudioToolbox
import Foundation
import IDCapture_Swift
import IDentitySDK_Swift
@_exported import SelfieCapture_Swift
import Swift
import UIKit
import _Concurrency
public struct LiveFaceCheckResult {
  public var selfie: IDentitySDK_Swift.Selfie
  public var isFakeFace: Swift.Bool
  public func submit(additionalDocuments: [IDentitySDK_Swift.AdditionalDocumentsRequest]? = nil, completion: @escaping IDentitySDK_Swift.LiveFaceCheckAPICompletion)
}
public struct CustomerEnrollBiometricsResult {
  public var selfie: IDentitySDK_Swift.Selfie
  public func submit(additionalDocuments: [IDentitySDK_Swift.AdditionalDocumentsRequest]? = nil, completion: @escaping IDentitySDK_Swift.CustomerEnrollBiometricsAPICompletion)
}
public struct CustomerVerificationResult {
  public var selfie: IDentitySDK_Swift.Selfie
  public func submit(additionalDocuments: [IDentitySDK_Swift.AdditionalDocumentsRequest]? = nil, completion: @escaping IDentitySDK_Swift.CustomerVerificationAPICompletion)
}
public struct CustomerIdentifyResult {
  public var selfie: IDentitySDK_Swift.Selfie
  public func submit(completion: @escaping IDentitySDK_Swift.CustomerIdentifyAPICompletion)
}
public struct ValidateIdMatchFaceResult {
  public var selfie: IDentitySDK_Swift.Selfie
  public var front: IDentitySDK_Swift.DetectedData
  public var back: IDentitySDK_Swift.DetectedData?
  public func submit(additionalDocuments: [IDentitySDK_Swift.AdditionalDocumentsRequest]? = nil, completion: @escaping IDentitySDK_Swift.ValidateIdMatchFaceAPICompletion)
}
public struct CustomerEnrollResult {
  public var selfie: IDentitySDK_Swift.Selfie
  public var front: IDentitySDK_Swift.DetectedData
  public var back: IDentitySDK_Swift.DetectedData?
  public func submit(additionalDocuments: [IDentitySDK_Swift.AdditionalDocumentsRequest]? = nil, cardToken: Swift.String? = nil, cardLast4: Swift.String? = nil, completion: @escaping IDentitySDK_Swift.ValidateIdCustomerEnrollAPICompletion)
}
public typealias LiveFaceCheckCompletion = (_ result: Swift.Result<SelfieCapture_Swift.LiveFaceCheckResult, Swift.Error>) -> Swift.Void
public typealias CustomerEnrollBiometricsCompletion = (_ result: Swift.Result<SelfieCapture_Swift.CustomerEnrollBiometricsResult, Swift.Error>) -> Swift.Void
public typealias CustomerVerificationCompletion = (_ result: Swift.Result<SelfieCapture_Swift.CustomerVerificationResult, Swift.Error>) -> Swift.Void
public typealias CustomerIdentifyCompletion = (_ result: Swift.Result<SelfieCapture_Swift.CustomerIdentifyResult, Swift.Error>) -> Swift.Void
public typealias ValidateIdMatchFaceCompletion = (_ result: Swift.Result<SelfieCapture_Swift.ValidateIdMatchFaceResult, Swift.Error>) -> Swift.Void
public typealias ValidateIdCustomerEnrollCompletion = (_ result: Swift.Result<SelfieCapture_Swift.CustomerEnrollResult, Swift.Error>) -> Swift.Void
extension IDentitySDK_Swift.IDentitySDK {
  public static var customerLiveCheckRequest: IDentitySDK_Swift.CustomerLiveCheckRequest?
  public class func liveFaceCheck(from presenter: UIKit.UIViewController, completion: @escaping SelfieCapture_Swift.LiveFaceCheckCompletion)
  public static var customerEnrollBiometricsRequest: IDentitySDK_Swift.CustomerEnrollBiometricsRequest?
  public class func customerEnrollBiometrics(from presenter: UIKit.UIViewController, personalData: IDentitySDK_Swift.PersonalCustomerCommonRequestData, options: IDentitySDK_Swift.AdditionalCustomerEnrollBiometricRequestData, completion: @escaping SelfieCapture_Swift.CustomerEnrollBiometricsCompletion)
  public static var customerVerifyRequest: IDentitySDK_Swift.CustomerVerifyRequest?
  public class func customerVerification(from presenter: UIKit.UIViewController, personalData: IDentitySDK_Swift.PersonalCustomerVerifyData, completion: @escaping SelfieCapture_Swift.CustomerVerificationCompletion)
  public static var customerIdentifyRequest: IDentitySDK_Swift.CustomerIdentifyRequest?
  public class func identifyCustomer(from presenter: UIKit.UIViewController, completion: @escaping SelfieCapture_Swift.CustomerIdentifyCompletion)
}
extension IDentitySDK_Swift.IDentitySDK {
  public static var customerValidateIdFaceMatchRequest: IDentitySDK_Swift.CustomerValidateIdFaceMatchRequest?
  public class func idValidationAndMatchFace(from presenter: UIKit.UIViewController, options: IDentitySDK_Swift.AdditionalCustomerWFlagCommonData, completion: @escaping SelfieCapture_Swift.ValidateIdMatchFaceCompletion)
  public static var customerEnrollRequest: IDentitySDK_Swift.CustomerEnrollRequest?
  public class func idValidationAndCustomerEnroll(from presenter: UIKit.UIViewController, personalData: IDentitySDK_Swift.PersonalCustomerCommonRequestData, options: IDentitySDK_Swift.AdditionalCustomerWFlagCommonData, completion: @escaping SelfieCapture_Swift.ValidateIdCustomerEnrollCompletion)
}
