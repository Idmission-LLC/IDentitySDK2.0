// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7.2 (swiftlang-5.7.2.135.5 clang-1400.0.29.51)
// swift-module-flags: -target x86_64-apple-ios13.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name VideoCapture_Swift
// swift-module-flags-ignorable: -enable-bare-slash-regex
import AVFoundation
import AudioToolbox
import Foundation
import IDentitySDK_Swift
import Speech
import Swift
import TensorFlowLite
import UIKit
@_exported import VideoCapture_Swift
import _Concurrency
import _StringProcessing
public struct VideoIdResult {
  public var videoURL: Foundation.URL
  public var selfie: IDentitySDK_Swift.Selfie
  public var idToSelfieMatch: Swift.Bool
  public var idToIdPhotoMatch: Swift.Bool
  public var idFrontDataMatch: Swift.Bool
  public var idBackDataMatch: Swift.Bool
}
public typealias VideoIdCompletion = (_ result: Swift.Result<VideoCapture_Swift.VideoIdResult, Swift.Error>) -> Swift.Void
extension IDentitySDK_Swift.IDentitySDK {
  public class func videoIDCapture(from presenter: UIKit.UIViewController, front: IDentitySDK_Swift.DetectedData, back: IDentitySDK_Swift.DetectedData? = nil, text: Swift.String, completion: @escaping VideoCapture_Swift.VideoIdCompletion)
}
public struct FaceMatchResult {
  public var distance: Swift.Float
  public var isMatched: Swift.Bool
  public init(distance: Swift.Float, isMatched: Swift.Bool)
}
public class FaceMatchDetector {
  public init()
  public func faceMatch(selfieImage: UIKit.UIImage, idFaceImage: UIKit.UIImage, faceMatchMax: Swift.Float) -> VideoCapture_Swift.FaceMatchResult?
  @objc deinit
}
